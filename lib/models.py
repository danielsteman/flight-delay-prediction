# generated by datamodel-codegen:
#   filename:  flight.py
#   timestamp: 2023-08-10T19:03:53+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel


class AircraftType(BaseModel):
    iataMain: Optional[str]
    iataSub: Optional[str]


class BaggageClaim(BaseModel):
    belts: List[str]


class CheckinClass(BaseModel):
    code: str
    description: str


class Desk(BaseModel):
    checkinClass: Optional[CheckinClass]
    position: int


class Desks(BaseModel):
    desks: List[Desk]


class Row(BaseModel):
    position: str
    desks: Desks


class Rows(BaseModel):
    rows: List[Row]


class CheckinAllocation(BaseModel):
    endTime: str
    rows: Rows
    startTime: str


class Remarks(BaseModel):
    remarks: List[str]


class CheckinAllocations(BaseModel):
    checkinAllocations: List[CheckinAllocation]
    remarks: Optional[Remarks]


class Codeshares(BaseModel):
    codeshares: List[str]


class PublicFlightState(BaseModel):
    flightStates: List[str]


class Route(BaseModel):
    destinations: List[str]
    eu: str
    visa: bool


class TransferPositions(BaseModel):
    transferPositions: List[int]


class Flight(BaseModel):
    lastUpdatedAt: str
    actualLandingTime: Optional[str]
    actualOffBlockTime: Optional[str]
    aircraftRegistration: Optional[str]
    aircraftType: AircraftType
    baggageClaim: Optional[BaggageClaim]
    checkinAllocations: Optional[CheckinAllocations]
    codeshares: Optional[Codeshares]
    estimatedLandingTime: Optional[str]
    expectedTimeBoarding: Optional[str]
    expectedTimeGateClosing: Optional[str]
    expectedTimeGateOpen: Optional[str]
    expectedTimeOnBelt: Optional[str]
    expectedSecurityFilter: Optional[str]
    flightDirection: str
    flightName: str
    flightNumber: int
    gate: Optional[str]
    pier: Optional[str]
    id: str
    isOperationalFlight: bool
    mainFlight: str
    prefixIATA: Optional[str]
    prefixICAO: Optional[str]
    airlineCode: Optional[int]
    publicEstimatedOffBlockTime: Optional[str]
    publicFlightState: PublicFlightState
    route: Route
    scheduleDateTime: str
    scheduleDate: str
    scheduleTime: str
    serviceType: str
    terminal: Optional[int]
    transferPositions: Optional[TransferPositions]
    schemaVersion: str
